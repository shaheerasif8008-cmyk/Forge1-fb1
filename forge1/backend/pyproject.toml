[project]
name = "forge1"
version = "1.0.0"
description = "Forge 1 Platform - Enterprise AI Employee Builder Backend"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core FastAPI and web framework
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "pydantic>=2.0.0,<3.0.0",
    "pydantic-settings>=2.0.0",
    
    # Database and Storage
    "psycopg2-binary>=2.9.0",
    "redis>=4.0.0",
    
    # Security and Authentication
    "cryptography>=40.0.0",
    "pyjwt>=2.8.0",
    "bcrypt>=4.0.0",
    
    # Monitoring and Observability
    "prometheus-client>=0.20.0",
    "structlog>=23.0.0",
    
    # AI and ML (simplified)
    "openai>=1.0.0",
    "anthropic>=0.30.0",
    "numpy>=1.24.0",
    
    # LlamaIndex Integration (pinned for stability)
    "llama-index>=0.10.0,<0.11.0",
    "llama-index-core>=0.10.0,<0.11.0",
    "llama-index-embeddings-openai>=0.1.0",
    "llama-index-llms-openai>=0.1.0",
    "llama-index-readers-file>=0.1.0",
    "llama-index-vector-stores-postgres>=0.7.0",
    
    # Workflow orchestration (using native Python async/await)
    # Note: workflows-py removed due to availability issues
    
    # Document Processing Dependencies
    "pypdf>=3.0.0",
    "python-docx>=0.8.11",
    "pytesseract>=0.3.10",  # OCR support
    "pillow>=10.0.0",  # Image processing for OCR
    
    # Google Drive Integration
    "google-api-python-client>=2.0.0",
    "google-auth>=2.0.0",
    "google-auth-oauthlib>=1.0.0",
    
    # Slack Integration
    "slack-sdk>=3.0.0",
    
    # Vector Operations
    "pgvector>=0.2.0",
    "sentence-transformers>=2.2.0",
    "pinecone>=4.0.0",
    
    # OpenTelemetry for Observability
    "opentelemetry-api>=1.36.0,<1.37.0",
    "opentelemetry-sdk>=1.36.0,<1.37.0",
    "opentelemetry-instrumentation>=0.57b0,<0.58.0",
    "opentelemetry-exporter-otlp>=1.36.0,<1.37.0",
    "opentelemetry-instrumentation-fastapi>=0.57b0,<0.58.0",
    "opentelemetry-instrumentation-celery>=0.57b0,<0.58.0",
    "opentelemetry-instrumentation-redis>=0.57b0,<0.58.0",
    "opentelemetry-instrumentation-psycopg2>=0.57b0,<0.58.0",
    "opentelemetry-instrumentation-requests>=0.57b0,<0.58.0",
    "opentelemetry-instrumentation-httpx>=0.57b0,<0.58.0",
    
    # Azure Monitor Integration
    "azure-monitor-opentelemetry>=1.8.0,<1.9.0",
    "azure-core>=1.29.0",
    
    # OSS Systems Integration
    "celery>=5.3.0",
    "weaviate-client>=3.25.0",
    "kafka-python>=2.0.0",
    
    # Policy Engine (OPA) - using requests for OPA REST API
    # Note: Using standard HTTP client for OPA integration
    
    # Utilities
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "click>=8.0.0",
    "rich>=13.0.0",
    "requests>=2.28.0",
    "httpx>=0.24.0",
    
    # Testing
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=forge1",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "-v"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["forge1"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
