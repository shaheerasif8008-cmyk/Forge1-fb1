# Staging Environment Configuration
# Employee Lifecycle System Deployment Configuration

environment: staging
deployment_type: kubernetes

# Docker image configuration
image:
  name: employee-lifecycle
  tag: staging-${GIT_COMMIT_SHORT}
  registry: your-registry.com/employee-lifecycle
  build_args:
    ENVIRONMENT: staging
    BUILD_TARGET: production

# Kubernetes configuration
kubernetes:
  context: staging-cluster
  namespace: employee-lifecycle-staging
  deployment_name: employee-api
  replicas: 2
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

# Database configuration
database:
  url: ${DATABASE_URL}
  pool_size: 20
  max_overflow: 30
  ssl_mode: require
  migrations:
    auto_apply: true
    backup_before: true

# Redis configuration
redis:
  url: ${REDIS_URL}
  pool_size: 20
  ssl_enabled: true

# Health checks
health_checks:
  base_url: https://api-staging.forge1.com
  endpoints:
    - /health
    - /ready
    - /performance/health
    - /performance/metrics
  timeout: 60
  retry_count: 5
  retry_delay: 10

# Monitoring
monitoring:
  enabled: true
  metrics_port: 9090
  log_level: INFO
  sentry_dsn: ${SENTRY_DSN}
  datadog:
    enabled: true
    api_key: ${DATADOG_API_KEY}

# Security
security:
  ssl_enabled: true
  ssl_cert_path: /certs/tls.crt
  ssl_key_path: /certs/tls.key
  cors_origins:
    - https://app-staging.forge1.com
    - https://admin-staging.forge1.com
  rate_limiting:
    enabled: true
    requests_per_minute: 5000
  jwt:
    secret_key: ${JWT_SECRET_KEY}
    expiration_hours: 24

# Features
features:
  debug_mode: false
  hot_reload: false
  profiling: false
  test_data: false
  analytics: true

# External services
external_services:
  openai:
    api_key: ${OPENAI_API_KEY}
    model: gpt-4
    max_tokens: 2000
    timeout: 30
  
  pinecone:
    api_key: ${PINECONE_API_KEY}
    environment: us-west1-gcp
    index_name: employee-memories-staging

# Load balancing
load_balancer:
  enabled: true
  type: nginx-ingress
  annotations:
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

# Auto-scaling
autoscaling:
  enabled: true
  min_replicas: 2
  max_replicas: 10
  target_cpu_utilization: 70
  target_memory_utilization: 80

# Backup configuration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention_days: 30
  storage:
    type: s3
    bucket: employee-lifecycle-backups-staging
    region: us-west-2

# Notifications
notifications:
  enabled: true
  channels:
    - type: slack
      webhook_url: ${SLACK_WEBHOOK_URL}
      channel: "#deployments-staging"
    - type: email
      recipients:
        - devops@forge1.com
        - team@forge1.com

# Performance tuning
performance:
  connection_pool_size: 50
  worker_processes: 4
  max_connections: 1000
  timeout_seconds: 30

# Logging
logging:
  level: INFO
  format: json
  output: stdout
  aggregation:
    enabled: true
    endpoint: ${LOG_AGGREGATION_ENDPOINT}

# Testing
testing:
  smoke_tests: true
  load_tests: false
  security_tests: true