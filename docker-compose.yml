version: "3.9"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: forge1
      POSTGRES_PASSWORD: forge1
      POSTGRES_DB: forge1
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forge1"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  weaviate:
    image: semitechnologies/weaviate:1.24.7
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: /var/lib/weaviate
    ports:
      - "8080:8080"
    volumes:
      - weaviate-data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 12

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  slack-mock:
    image: ghcr.io/instantish/slack-mock:latest
    ports:
      - "8081:8081"

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./ops/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"
      - "4318:4318"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./ops/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:10
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_PASSWORD: forge1
      GF_USERS_ALLOW_SIGN_UP: "false"
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  openmeter:
    image: openmeterio/openmeter:latest
    profiles:
      - openmeter
    environment:
      OPENMETER_STORAGE_DRIVER: memory
    ports:
      - "8888:8888"
    depends_on:
      - db

  api:
    build:
      context: ./forge1/backend
    env_file:
      - .env
    command: uvicorn forge1.startup:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      weaviate:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env:ro
      - ./artifacts:/app/artifacts
      - ./ops/env:/app/ops/env:ro
      - ./data/drive-mock:/data/drive-mock

  worker:
    build:
      context: ./forge1/backend
    env_file:
      - .env
    command: celery -A forge1.integrations.queue.celery_app.celery_adapter worker -l info
    depends_on:
      - api
      - redis
      - db
    profiles:
      - worker

volumes:
  db-data:
  weaviate-data:
  grafana-data:
